import { APIClient } from "./core.mjs";
import * as Resources from "./resources/index.mjs";
import { BASE_URL, LATEST_API_VERSION } from "./constants.mjs";
export class TwelveLabs extends APIClient {
    constructor({ apiKey, version = LATEST_API_VERSION }) {
        if (version !== LATEST_API_VERSION) {
            throw new Error(`[Warning] You manually set the API version to ${version}, but this SDK version is not fully compatible with current API version, please use version 0.3.x or earlier`);
        }
        if (!apiKey) {
            throw new Error('Provide `apiKey` to initialize a client. You can see the API Key in the Dashboard page: https://dashboard.playground.io');
        }
        const customBaseUrl = process.env.TWELVELABS_BASE_URL;
        const baseUrl = `${customBaseUrl || BASE_URL}/${version}/`;
        super({ baseUrl, apiKey });
        this.baseUrl = baseUrl;
        this.apiKey = apiKey;
        this.index = new Resources.Index(this);
        this.task = new Resources.Task(this);
        this.search = new Resources.Search(this);
        this.generate = new Resources.Generate(this);
        this.embed = new Resources.Embed(this);
    }
}
export { Index, IndexListWithPagination, Video, VideoListWithPagination, Task, TaskListWithPagination, SearchResult, EmbeddingsTask, EmbeddingsTaskListWithPagination, EmbeddingsTaskStatus, CreateEmbeddingsResult, Embedding, SegmentEmbedding, } from "./models/index.mjs";
export { TwelveLabsError, APIConnectionError, APITimeoutError, BadRequestError, ConflictError, ForbiddenError, MethodNotAllowedError, NotFoundError, TooManyRequestsError, UnauthorizedError, InternalServerError, } from "./error.mjs";
//# sourceMappingURL=index.mjs.map