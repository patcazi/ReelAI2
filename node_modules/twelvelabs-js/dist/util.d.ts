/// <reference types="node" />
/// <reference types="node" />
import FormDataNode from 'form-data';
export declare function convertKeysToCamelCase(obj: any, skipKeys?: string[]): any;
export declare function convertKeysToSnakeCase<T>(obj: T): T;
export declare function removeUndefinedValues(obj: Record<string, any>): Record<string, any>;
export declare function handleComparisonParams(params: Record<string, any>, key: string, value: any | Record<string, any>): void;
export declare function isBunEnv(): boolean;
export declare const FormDataImpl: {
    new (form?: HTMLFormElement): FormData;
    prototype: FormData;
} | typeof FormDataNode;
export declare function attachFormFile(formData: InstanceType<typeof FormDataImpl>, formKey: string, file: Buffer | NodeJS.ReadableStream | string): void;
export declare const trackStream: (stream: AsyncIterable<Uint8Array>, chunkSize?: number) => ReadableStream<Uint8Array>;
//# sourceMappingURL=util.d.ts.map