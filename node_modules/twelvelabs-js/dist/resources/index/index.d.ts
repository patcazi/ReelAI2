import { TwelveLabs } from '../..';
import { RequestOptions } from '../../core';
import * as Models from '../../models';
import { APIResource } from '../../resource';
import { Video as VideoResource } from '../video';
import { CreateIndexParams, ListIndexParams } from './interfaces';
export declare class Index extends APIResource {
    video: VideoResource;
    constructor(client: TwelveLabs);
    retrieve(id: string, options?: RequestOptions): Promise<Models.Index>;
    list({ id, name, createdAt, updatedAt, ...restParams }?: ListIndexParams, options?: RequestOptions): Promise<Models.Index[]>;
    listPagination({ id, name, createdAt, updatedAt, ...restParams }?: ListIndexParams, options?: RequestOptions): Promise<Models.IndexListWithPagination>;
    create({ name, models, addons }: CreateIndexParams, options?: RequestOptions): Promise<Models.Index>;
    update(id: string, name: string, options?: RequestOptions): Promise<void>;
    delete(id: string, options?: RequestOptions): Promise<void>;
}
//# sourceMappingURL=index.d.ts.map