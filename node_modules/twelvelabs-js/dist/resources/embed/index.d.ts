import { RequestOptions } from '../../core';
import * as Models from '../../models';
import { APIResource } from '../../resource';
import { TwelveLabs } from '../..';
import { CreateEmbedParams, CreateEmbeddingsTaskVideoParams, ListEmbeddingsTaskParams } from './interfaces';
export declare class EmbedTask extends APIResource {
    retrieve(id: string, options?: RequestOptions): Promise<Models.EmbeddingsTask>;
    list(params?: ListEmbeddingsTaskParams, options?: RequestOptions): Promise<Models.EmbeddingsTask[]>;
    listPagination(params?: ListEmbeddingsTaskParams, options?: RequestOptions): Promise<Models.EmbeddingsTaskListWithPagination>;
    create(modelName: 'Marengo-retrieval-2.7', { file, url, startOffsetSec, endOffsetSec, clipLength, scopes }: CreateEmbeddingsTaskVideoParams, options?: RequestOptions): Promise<Models.EmbeddingsTask | undefined>;
    createBulk(modelName: 'Marengo-retrieval-2.7', videos: CreateEmbeddingsTaskVideoParams[], options?: RequestOptions): Promise<Models.EmbeddingsTask[]>;
    status(taskId: string, options?: RequestOptions): Promise<Models.EmbeddingsTaskStatus>;
}
export declare class Embed extends APIResource {
    task: EmbedTask;
    constructor(client: TwelveLabs);
    create({ modelName, text, textTruncate, audioUrl, audioFile, audioStartOffsetSec, imageUrl, imageFile, }: CreateEmbedParams, options?: RequestOptions): Promise<Models.CreateEmbeddingsResult>;
}
//# sourceMappingURL=index.d.ts.map