import { RequestOptions } from '../../core';
import * as Models from '../../models';
import { APIResource } from '../../resource';
import { ListVideoParams, RetrieveVideoParams, UpdateVideoParams } from './interfaces';
export declare class Video extends APIResource {
    retrieve(indexId: string, id: string, { embed }?: RetrieveVideoParams, options?: RequestOptions): Promise<Models.Video>;
    list(indexId: string, { size, width, height, duration, fps, createdAt, updatedAt, indexedAt, ...restParams }?: ListVideoParams, options?: RequestOptions): Promise<Models.Video[]>;
    listPagination(indexId: string, { size, width, height, duration, fps, createdAt, updatedAt, indexedAt, ...restParams }?: ListVideoParams, options?: RequestOptions): Promise<Models.VideoListWithPagination>;
    update(indexId: string, id: string, { userMetadata }: UpdateVideoParams, options?: RequestOptions): Promise<void>;
    delete(indexId: string, id: string, options?: RequestOptions): Promise<void>;
}
//# sourceMappingURL=index.d.ts.map