export class Index {
    constructor(resource, data) {
        this._resource = resource;
        this.id = data.id;
        this.name = data.indexName;
        this.models = data.models.map((v) => new IndexModel(v));
        this.videoCount = data.videoCount;
        this.totalDuration = data.totalDuration;
        this.createdAt = data.createdAt;
        this.updatedAt = data.updatedAt;
    }
    // Index related methods
    async retrieve(options = {}) {
        return await this._resource.retrieve(this.id, options);
    }
    async update(name, options = {}) {
        return await this._resource.update(this.id, name, options);
    }
    async delete(options = {}) {
        return await this._resource.delete(this.id, options);
    }
    // Task related methods
    async createTask(body, options = {}) {
        return await this._resource._client.task.create({ ...body, indexId: this.id }, options);
    }
    // Video related methods
    async listVideos(params = {}, options = {}) {
        return await this._resource.video.list(this.id, params, options);
    }
    // Search related methods
    async query(body, options = {}) {
        return await this._resource._client.search.query({ ...body, indexId: this.id }, options);
    }
}
export class IndexListWithPagination {
    constructor(resource, originParams, data, pageInfo) {
        this._resource = resource;
        this._originParams = originParams;
        this.data = data.map((v) => new Index(resource, v));
        this.pageInfo = pageInfo;
    }
    async next() {
        if (this.pageInfo.page >= this.pageInfo.totalPage) {
            return null;
        }
        const params = { ...this._originParams };
        params.page = this.pageInfo.page + 1;
        const res = await this._resource.listPagination(params);
        this.pageInfo = res.pageInfo;
        return res.data;
    }
}
class IndexModel {
    constructor(res) {
        this.id = res.id;
        this.name = res.modelName;
        this.options = res.modelOptions;
        this.addons = res.addons;
        this.finetuned = res.finetuned;
    }
}
//# sourceMappingURL=index.mjs.map