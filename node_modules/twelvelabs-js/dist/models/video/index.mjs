import { CreateEmbeddingsResult } from "../embed/index.mjs";
export class Video {
    constructor(resource, indexId, data) {
        this._resource = resource;
        this._indexId = indexId;
        this.id = data.id;
        this.systemMetadata = data.systemMetadata;
        this.userMetadata = data.userMetadata;
        this.hls = data.hls;
        this.source = data.source;
        this.indexedAt = data.indexedAt;
        this.createdAt = data.createdAt;
        this.updatedAt = data.updatedAt;
        if (data.embedding) {
            this.embedding = new CreateEmbeddingsResult(data.embedding);
        }
    }
    // Video related methods
    async update(params, options = {}) {
        return await this._resource.update(this._indexId, this.id, params, options);
    }
    async delete(options = {}) {
        return await this._resource.delete(this._indexId, this.id, options);
    }
    // Generate related methods
    async generateGist(types, options = {}) {
        return await this._resource._client.generate.gist(this.id, types, options);
    }
    async generateSummarize(type, prompt, temperature, options = {}) {
        return await this._resource._client.generate.summarize(this.id, type, prompt, temperature, options);
    }
    async generateText(prompt, temperature, options = {}) {
        return await this._resource._client.generate.text(this.id, prompt, temperature, options);
    }
}
export class VideoListWithPagination {
    constructor(resource, originParams, indexId, data, pageInfo) {
        this._resource = resource;
        this._originParams = originParams;
        this._indexId = indexId;
        this.data = data.map((v) => new Video(resource, indexId, v));
        this.pageInfo = pageInfo;
    }
    async next() {
        if (this.pageInfo.page >= this.pageInfo.totalPage) {
            return null;
        }
        const params = { ...this._originParams };
        params.page = this.pageInfo.page + 1;
        const res = await this._resource.listPagination(this._indexId, params);
        this.pageInfo = res.pageInfo;
        return res.data;
    }
}
//# sourceMappingURL=index.mjs.map